/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptomatic;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Damian
 */
public class CryptoPanel extends javax.swing.JPanel {

    /**
     * Creates new form CryptoPanel
     */
    private String docText;
    private String brutecryptDocText;
    private Encrypt_Decrypt crypter = new Encrypt_Decrypt();

    public CryptoPanel() {
        initComponents();
    }

    /**
     * This method reads a file and copies the text to the docText string
     *
     * @throws java.io.FileNotFoundException Checks for file existence
     */
    public boolean cryptFileReader() throws FileNotFoundException {
        File userFile;
        JFileChooser chooser = jFileChooser1; //open JfileChooser
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Text Files", "txt");
        chooser.setFileFilter(filter);

        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            userFile = chooser.getSelectedFile();
        } else {
            return false;
        }
        if (userFile.exists()) {
            FileReader userFileReader = new FileReader(userFile); //Read file

//       Charset charset = Charset.forName("US-ASCII");
            try (BufferedReader reader = new BufferedReader(userFileReader)) {
                String line = null;

                docText = "";
                while ((line = reader.readLine()) != null) {
                    System.out.println(line);
                    docText = docText + line; //save for further use
                }

                reader.close();
                userFileReader.close();
                return true;

            } catch (IOException x) {
                System.err.format("IOException: %s%n", x);
                return false;
            }
        } else {
            System.out.println("File does not exist");
            return false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        encryptButton = new javax.swing.JButton();
        decryptButton = new javax.swing.JButton();
        brutecryptButton = new javax.swing.JButton();
        encryptLabel = new javax.swing.JLabel();
        decryptLabel = new javax.swing.JLabel();
        brutecryptLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        statusTextField = new javax.swing.JTextField();
        fileNameTextField = new javax.swing.JTextField();
        fileNameLabel = new javax.swing.JLabel();
        keyLabel = new javax.swing.JLabel();
        keyTextField = new javax.swing.JTextField();
        OpenFileBtn = new javax.swing.JButton();

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        encryptButton.setText("Encrypt");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });

        decryptButton.setText("Decrypt");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        brutecryptButton.setText("Brutecrypt");

        encryptLabel.setText("Encrypt this file:");

        decryptLabel.setText("Decrypt this file:");

        brutecryptLabel.setText("Brutecrypt this file:");

        exitButton.setText("Exit");

        jLabel1.setText("Status Bar:");

        statusTextField.setText("Status Updates Here");

        fileNameTextField.setText("File Name Here");
        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameTextFieldActionPerformed(evt);
            }
        });

        fileNameLabel.setText("Enter a file name when using the 3 buttons above");

        keyLabel.setText("Enter a 2 character key when using Encrypt/Decrypt functions");

        keyTextField.setText("Enter Key Here");

        OpenFileBtn.setText("Open File");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(OpenFileBtn)))
                .addGap(0, 48, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(brutecryptLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(encryptLabel)
                                        .addGap(1, 1, 1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(brutecryptButton)
                                    .addComponent(encryptButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(decryptLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(decryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keyLabel)
                            .addComponent(keyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fileNameTextField)
                            .addComponent(fileNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(177, 177, 177)
                                .addComponent(OpenFileBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(encryptButton)
                            .addComponent(encryptLabel))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(keyLabel)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decryptButton)
                    .addComponent(decryptLabel)
                    .addComponent(keyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brutecryptLabel)
                    .addComponent(brutecryptButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fileNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        try {
            // TODO add your handling code here:
            boolean cryptFileReader = this.cryptFileReader();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(CryptoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        // TODO add your handling code here:
        Encrypt_Decrypt myCrypt = new Encrypt_Decrypt();
        
        if (docText.isEmpty()) {
            statusTextField.setText("No information found in file info");
        } else {

            try {
                String fileName = fileNameTextField.getText();

                File outputFile = new File(fileName + ".txt");
                FileWriter outWriter = new FileWriter(outputFile);
                BufferedWriter outBuffer = new BufferedWriter(outWriter);
                String key = keyTextField.getText();
                if (key.length() != 2)
                {
                    statusTextField.setText("Invalid Key Entry");
                }
                else{
                String secretMessage = myCrypt.Crypt(docText, key);
                
                outBuffer.write(secretMessage);
                
                outBuffer.close();
                outWriter.close();
                }
                
                
                
            } catch (IOException ex) {
                Logger.getLogger(CryptoPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_encryptButtonActionPerformed

    private void fileNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileNameTextFieldActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        // TODO add your handling code here:
        
        Encrypt_Decrypt myCrypt = new Encrypt_Decrypt();
        
        if (docText.isEmpty()) {
            statusTextField.setText("No information found in file info");
        } else {

            try {
                String fileName = fileNameTextField.getText();

                File outputFile = new File(fileName + ".txt");
                FileWriter outWriter = new FileWriter(outputFile);
                BufferedWriter outBuffer = new BufferedWriter(outWriter);
                String key = keyTextField.getText();
                if (key.length() != 2)
                {
                    statusTextField.setText("Invalid Key Entry");
                }
                else{
                String decryptedMessage = myCrypt.Crypt(docText, key);
                
                outBuffer.write(decryptedMessage);
                
                outBuffer.close();
                outWriter.close();
                }
                
                
                
            } catch (IOException ex) {
                Logger.getLogger(CryptoPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_decryptButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OpenFileBtn;
    private javax.swing.JButton brutecryptButton;
    private javax.swing.JLabel brutecryptLabel;
    private javax.swing.JButton decryptButton;
    private javax.swing.JLabel decryptLabel;
    private javax.swing.JButton encryptButton;
    private javax.swing.JLabel encryptLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel keyLabel;
    private javax.swing.JTextField keyTextField;
    private javax.swing.JTextField statusTextField;
    // End of variables declaration//GEN-END:variables
}
